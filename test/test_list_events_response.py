# coding: utf-8

"""
    Sysdig Secure Client API

    Sysdig Secure Client API enables you to deep-dive into specific security events.

    The version of the OpenAPI document: 1.2.1
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sysdig_client.models.list_events_response import ListEventsResponse

class TestListEventsResponse(unittest.TestCase):
    """ListEventsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListEventsResponse:
        """Test ListEventsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListEventsResponse`
        """
        model = ListEventsResponse()
        if include_optional:
            return ListEventsResponse(
                page = sysdig_client.models.events_feed_page.EventsFeedPage(
                    total = 10, 
                    prev = 'LTltNGUybXIwdWkzZThhMjE1bjRn', 
                    next = 'KzltNGUybXIwdWkzZThhMjE1bjRn', ),
                data = [
                    sysdig_client.models.event.Event(
                        id = '15cbf54e34df95404caad1c988cf7c42', 
                        cursor = 'LTltNGUybXIwdWkzZThhMjE1bjRn', 
                        timestamp = 1617220000000000000, 
                        originator = 'policy', 
                        category = 'runtime', 
                        source = 'k8s_audit', 
                        source_details = sysdig_client.models.source_details.SourceDetails(
                            type = 'cloud', 
                            sub_type = 'host', ), 
                        raw_event_originator = 'admissionController', 
                        raw_event_category = 'runtime', 
                        engine = 'drift', 
                        name = 'Launch Privileged Container', 
                        description = 'Identify a container being created with privileged=true
', 
                        severity = 4, 
                        actions = [
                            null
                            ], 
                        content = sysdig_client.models.event_content.EventContent(), 
                        labels = {"foo":"bar","baz":"qux"}, )
                    ]
            )
        else:
            return ListEventsResponse(
                page = sysdig_client.models.events_feed_page.EventsFeedPage(
                    total = 10, 
                    prev = 'LTltNGUybXIwdWkzZThhMjE1bjRn', 
                    next = 'KzltNGUybXIwdWkzZThhMjE1bjRn', ),
                data = [
                    sysdig_client.models.event.Event(
                        id = '15cbf54e34df95404caad1c988cf7c42', 
                        cursor = 'LTltNGUybXIwdWkzZThhMjE1bjRn', 
                        timestamp = 1617220000000000000, 
                        originator = 'policy', 
                        category = 'runtime', 
                        source = 'k8s_audit', 
                        source_details = sysdig_client.models.source_details.SourceDetails(
                            type = 'cloud', 
                            sub_type = 'host', ), 
                        raw_event_originator = 'admissionController', 
                        raw_event_category = 'runtime', 
                        engine = 'drift', 
                        name = 'Launch Privileged Container', 
                        description = 'Identify a container being created with privileged=true
', 
                        severity = 4, 
                        actions = [
                            null
                            ], 
                        content = sysdig_client.models.event_content.EventContent(), 
                        labels = {"foo":"bar","baz":"qux"}, )
                    ],
        )
        """

    def testListEventsResponse(self):
        """Test ListEventsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
