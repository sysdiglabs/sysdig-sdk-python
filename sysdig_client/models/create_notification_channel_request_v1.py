# coding: utf-8

"""
    Sysdig Secure Client API

    Sysdig Secure Client API.

    The version of the OpenAPI document: 1.1.1
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from importlib import import_module
from pydantic import BaseModel, ConfigDict, Field, StrictBool
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing_extensions import Annotated
from sysdig_client.models.notification_channel_type_v1 import NotificationChannelTypeV1
from typing import Optional, Set
from typing_extensions import Self

from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from sysdig_client.models.create_custom_webhook_notification_channel_request_v1 import CreateCustomWebhookNotificationChannelRequestV1
    from sysdig_client.models.create_email_notification_channel_request_v1 import CreateEmailNotificationChannelRequestV1
    from sysdig_client.models.create_gchat_notification_channel_request_v1 import CreateGchatNotificationChannelRequestV1
    from sysdig_client.models.create_ibm_event_notifications_notification_channel_request_v1 import CreateIbmEventNotificationsNotificationChannelRequestV1
    from sysdig_client.models.create_ms_teams_notification_channel_request_v1 import CreateMsTeamsNotificationChannelRequestV1
    from sysdig_client.models.create_opsgenie_notification_channel_request_v1 import CreateOpsgenieNotificationChannelRequestV1
    from sysdig_client.models.create_pager_duty_notification_channel_request_v1 import CreatePagerDutyNotificationChannelRequestV1
    from sysdig_client.models.create_prometheus_alert_manager_notification_channel_request_v1 import CreatePrometheusAlertManagerNotificationChannelRequestV1
    from sysdig_client.models.create_slack_notification_channel_request_v1 import CreateSlackNotificationChannelRequestV1
    from sysdig_client.models.create_sns_notification_channel_request_v1 import CreateSnsNotificationChannelRequestV1
    from sysdig_client.models.create_team_email_notification_channel_request_v1 import CreateTeamEmailNotificationChannelRequestV1
    from sysdig_client.models.create_victor_ops_notification_channel_request_v1 import CreateVictorOpsNotificationChannelRequestV1
    from sysdig_client.models.create_webhook_notification_channel_request_v1 import CreateWebhookNotificationChannelRequestV1

class CreateNotificationChannelRequestV1(BaseModel):
    """
    CreateNotificationChannelRequestV1
    """ # noqa: E501
    team_id: Optional[Annotated[int, Field(le=2147483647, strict=True, ge=0)]] = Field(default=None, description="ID of team that owns the notification channel. If null, this will be a global notification channel", alias="teamId")
    is_enabled: Optional[StrictBool] = Field(default=False, description="Indicates if the notification channel is enabled or not.", alias="isEnabled")
    name: Annotated[str, Field(strict=True, max_length=255)] = Field(description="Name of the notification channel. It must be unique.")
    has_test_notification_enabled: Optional[StrictBool] = Field(default=False, description="Indicates whether or not a test notification should be sent upon creation or update of this notification channel resource", alias="hasTestNotificationEnabled")
    type: NotificationChannelTypeV1
    __properties: ClassVar[List[str]] = ["teamId", "isEnabled", "name", "hasTestNotificationEnabled", "type"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    # JSON field name that stores the object type
    __discriminator_property_name: ClassVar[str] = 'type'

    # discriminator mappings
    __discriminator_value_class_map: ClassVar[Dict[str, str]] = {
        'CUSTOM_WEBHOOK': 'CreateCustomWebhookNotificationChannelRequestV1','EMAIL': 'CreateEmailNotificationChannelRequestV1','GCHAT': 'CreateGchatNotificationChannelRequestV1','IBM_EVENT_NOTIFICATIONS': 'CreateIbmEventNotificationsNotificationChannelRequestV1','MS_TEAMS': 'CreateMsTeamsNotificationChannelRequestV1','OPSGENIE': 'CreateOpsgenieNotificationChannelRequestV1','PAGER_DUTY': 'CreatePagerDutyNotificationChannelRequestV1','PROMETHEUS_ALERT_MANAGER': 'CreatePrometheusAlertManagerNotificationChannelRequestV1','SLACK': 'CreateSlackNotificationChannelRequestV1','SNS': 'CreateSnsNotificationChannelRequestV1','TEAM_EMAIL': 'CreateTeamEmailNotificationChannelRequestV1','VICTOROPS': 'CreateVictorOpsNotificationChannelRequestV1','WEBHOOK': 'CreateWebhookNotificationChannelRequestV1'
    }

    @classmethod
    def get_discriminator_value(cls, obj: Dict[str, Any]) -> Optional[str]:
        """Returns the discriminator value (object type) of the data"""
        discriminator_value = obj[cls.__discriminator_property_name]
        if discriminator_value:
            return cls.__discriminator_value_class_map.get(discriminator_value)
        else:
            return None

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Union[CreateCustomWebhookNotificationChannelRequestV1, CreateEmailNotificationChannelRequestV1, CreateGchatNotificationChannelRequestV1, CreateIbmEventNotificationsNotificationChannelRequestV1, CreateMsTeamsNotificationChannelRequestV1, CreateOpsgenieNotificationChannelRequestV1, CreatePagerDutyNotificationChannelRequestV1, CreatePrometheusAlertManagerNotificationChannelRequestV1, CreateSlackNotificationChannelRequestV1, CreateSnsNotificationChannelRequestV1, CreateTeamEmailNotificationChannelRequestV1, CreateVictorOpsNotificationChannelRequestV1, CreateWebhookNotificationChannelRequestV1]]:
        """Create an instance of CreateNotificationChannelRequestV1 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # set to None if team_id (nullable) is None
        # and model_fields_set contains the field
        if self.team_id is None and "team_id" in self.model_fields_set:
            _dict['teamId'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Dict[str, Any]) -> Optional[Union[CreateCustomWebhookNotificationChannelRequestV1, CreateEmailNotificationChannelRequestV1, CreateGchatNotificationChannelRequestV1, CreateIbmEventNotificationsNotificationChannelRequestV1, CreateMsTeamsNotificationChannelRequestV1, CreateOpsgenieNotificationChannelRequestV1, CreatePagerDutyNotificationChannelRequestV1, CreatePrometheusAlertManagerNotificationChannelRequestV1, CreateSlackNotificationChannelRequestV1, CreateSnsNotificationChannelRequestV1, CreateTeamEmailNotificationChannelRequestV1, CreateVictorOpsNotificationChannelRequestV1, CreateWebhookNotificationChannelRequestV1]]:
        """Create an instance of CreateNotificationChannelRequestV1 from a dict"""
        # look up the object type based on discriminator mapping
        object_type = cls.get_discriminator_value(obj)
        if object_type ==  'CreateCustomWebhookNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_custom_webhook_notification_channel_request_v1").CreateCustomWebhookNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateEmailNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_email_notification_channel_request_v1").CreateEmailNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateGchatNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_gchat_notification_channel_request_v1").CreateGchatNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateIbmEventNotificationsNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_ibm_event_notifications_notification_channel_request_v1").CreateIbmEventNotificationsNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateMsTeamsNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_ms_teams_notification_channel_request_v1").CreateMsTeamsNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateOpsgenieNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_opsgenie_notification_channel_request_v1").CreateOpsgenieNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreatePagerDutyNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_pager_duty_notification_channel_request_v1").CreatePagerDutyNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreatePrometheusAlertManagerNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_prometheus_alert_manager_notification_channel_request_v1").CreatePrometheusAlertManagerNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateSlackNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_slack_notification_channel_request_v1").CreateSlackNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateSnsNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_sns_notification_channel_request_v1").CreateSnsNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateTeamEmailNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_team_email_notification_channel_request_v1").CreateTeamEmailNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateVictorOpsNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_victor_ops_notification_channel_request_v1").CreateVictorOpsNotificationChannelRequestV1.from_dict(obj)
        if object_type ==  'CreateWebhookNotificationChannelRequestV1':
            return import_module("sysdig_client.models.create_webhook_notification_channel_request_v1").CreateWebhookNotificationChannelRequestV1.from_dict(obj)

        raise ValueError("CreateNotificationChannelRequestV1 failed to lookup discriminator value from " +
                            json.dumps(obj) + ". Discriminator property name: " + cls.__discriminator_property_name +
                            ", mapping: " + json.dumps(cls.__discriminator_value_class_map))


