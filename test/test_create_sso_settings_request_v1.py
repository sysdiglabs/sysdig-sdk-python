# coding: utf-8

"""
    Sysdig Secure Client API

    Sysdig Secure Client API.

    The version of the OpenAPI document: 1.1.1
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sysdig_client.models.create_sso_settings_request_v1 import CreateSsoSettingsRequestV1

class TestCreateSsoSettingsRequestV1(unittest.TestCase):
    """CreateSsoSettingsRequestV1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateSsoSettingsRequestV1:
        """Test CreateSsoSettingsRequestV1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateSsoSettingsRequestV1`
        """
        model = CreateSsoSettingsRequestV1()
        if include_optional:
            return CreateSsoSettingsRequestV1(
                product = 'secure',
                is_active = True,
                create_user_on_login = True,
                is_password_login_enabled = True,
                is_single_logout_enabled = True,
                is_group_mapping_enabled = True,
                group_mapping_attribute_name = 'groups',
                config = sysdig_client.models.sso_settings_create_request_base_v1.SSO Settings Create Request Base V1(
                    type = 'SAML', )
            )
        else:
            return CreateSsoSettingsRequestV1(
                product = 'secure',
                config = sysdig_client.models.sso_settings_create_request_base_v1.SSO Settings Create Request Base V1(
                    type = 'SAML', ),
        )
        """

    def testCreateSsoSettingsRequestV1(self):
        """Test CreateSsoSettingsRequestV1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
