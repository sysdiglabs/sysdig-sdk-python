# coding: utf-8

"""
    Sysdig Secure Events Feed API

    Sysdig Secure Events Feed API enables you to deep-dive into specific security events.

    The version of the OpenAPI document: 1.2.1
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sysdig_client.models.workload_runtime_detection_content import WorkloadRuntimeDetectionContent

class TestWorkloadRuntimeDetectionContent(unittest.TestCase):
    """WorkloadRuntimeDetectionContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkloadRuntimeDetectionContent:
        """Test WorkloadRuntimeDetectionContent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkloadRuntimeDetectionContent`
        """
        model = WorkloadRuntimeDetectionContent()
        if include_optional:
            return WorkloadRuntimeDetectionContent(
                type = 'workloadRuntimeDetection',
                policy_id = 2,
                rule_name = 'Create Security Group Rule Allowing SSH Ingress',
                rule_type = 6,
                rule_sub_type = 1,
                rule_tags = [
                    'AWS_IAM'
                    ],
                output = 'File below a known binary directory opened for writing...
',
                fields = None,
                run_book = 'https://www.mycompany.com/our-runbook-link',
                origin = 'Sysdig'
            )
        else:
            return WorkloadRuntimeDetectionContent(
                type = 'workloadRuntimeDetection',
                policy_id = 2,
                rule_name = 'Create Security Group Rule Allowing SSH Ingress',
                rule_type = 6,
                rule_sub_type = 1,
                rule_tags = [
                    'AWS_IAM'
                    ],
                output = 'File below a known binary directory opened for writing...
',
                fields = None,
        )
        """

    def testWorkloadRuntimeDetectionContent(self):
        """Test WorkloadRuntimeDetectionContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
