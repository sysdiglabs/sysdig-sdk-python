# coding: utf-8

"""
    Sysdig Secure Client API

    Sysdig Secure Client API.

    The version of the OpenAPI document: 1.1.1
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sysdig_client.models.open_id_metadata_v1 import OpenIdMetadataV1

class TestOpenIdMetadataV1(unittest.TestCase):
    """OpenIdMetadataV1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenIdMetadataV1:
        """Test OpenIdMetadataV1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenIdMetadataV1`
        """
        model = OpenIdMetadataV1()
        if include_optional:
            return OpenIdMetadataV1(
                issuer = 'https://accounts.example.com',
                authorization_endpoint = 'https://accounts.example.com/oauth2/authorize',
                token_endpoint = 'https://accounts.example.com/oauth2/token',
                jwks_uri = 'https://accounts.example.com/oauth2/jwks',
                end_session_endpoint = 'https://accounts.example.com/oauth2/logout',
                user_info_endpoint = 'https://accounts.example.com/oauth2/userinfo',
                token_auth_method = 'CLIENT_SECRET_BASIC'
            )
        else:
            return OpenIdMetadataV1(
                authorization_endpoint = 'https://accounts.example.com/oauth2/authorize',
                token_endpoint = 'https://accounts.example.com/oauth2/token',
                token_auth_method = 'CLIENT_SECRET_BASIC',
        )
        """

    def testOpenIdMetadataV1(self):
        """Test OpenIdMetadataV1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
