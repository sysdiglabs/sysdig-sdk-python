# coding: utf-8

"""
    Sysdig Secure Vulnerability Management Runtimeview Public API

    This API allows reading runtime vulnerability data.

    The version of the OpenAPI document: 1.0.3
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from sysdig_client.models.runtime_results_response import RuntimeResultsResponse

from sysdig_client.api_client import ApiClient, RequestSerialized
from sysdig_client.api_response import ApiResponse
from sysdig_client.rest import RESTResponseType


class VulnerabilityManagementApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def scanner_api_service_list_runtime_results(
        self,
        cursor: Annotated[Optional[Annotated[str, Field(strict=True, max_length=300)]], Field(description="Cursor is a string used to retrieve a particular page of data. It is an opaque structure, and should not be mangled. It could be retrieved in the body of each request. If a response does not contain a cursor, it means that it's the last page.")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="Limit for pagination")] = None,
        filter: Annotated[Optional[Annotated[str, Field(strict=True, max_length=1024)]], Field(description="Query language expression for filtering results. It is a subset of the full metrics query language used in monitoring.  Operators: - `and`, `or` logical operators (i.e. `kubernetes.cluster.name=\"production\" and kubernetes.pod.container.name = \"docker.internal.sysdig.tools\"`)  - `=` and `!=` comparison operators (i.e. `kubernetes.cluster.name=\"staging\"`)  This query language does not support the full set of metrics supported in the monitor query language, but instead supports a set of fields proper to each Scan Result type.  The supported fields are the all the fields of the `Scope`, plus: `freeText`, `hasRunningVulns` and `hasRunningVulns`.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Field used to sort the results vulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity runningVulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity for running assets")] = None,
        order: Annotated[Optional[StrictStr], Field(description="Ordering of the results for the sort field")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RuntimeResultsResponse:
        """Get a list of runtime scan results

        Retrieves a list of runtime scan results discovered by the runtime scanner that match a filter given a specified cursor.

        :param cursor: Cursor is a string used to retrieve a particular page of data. It is an opaque structure, and should not be mangled. It could be retrieved in the body of each request. If a response does not contain a cursor, it means that it's the last page.
        :type cursor: str
        :param limit: Limit for pagination
        :type limit: int
        :param filter: Query language expression for filtering results. It is a subset of the full metrics query language used in monitoring.  Operators: - `and`, `or` logical operators (i.e. `kubernetes.cluster.name=\"production\" and kubernetes.pod.container.name = \"docker.internal.sysdig.tools\"`)  - `=` and `!=` comparison operators (i.e. `kubernetes.cluster.name=\"staging\"`)  This query language does not support the full set of metrics supported in the monitor query language, but instead supports a set of fields proper to each Scan Result type.  The supported fields are the all the fields of the `Scope`, plus: `freeText`, `hasRunningVulns` and `hasRunningVulns`.
        :type filter: str
        :param sort: Field used to sort the results vulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity runningVulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity for running assets
        :type sort: str
        :param order: Ordering of the results for the sort field
        :type order: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._scanner_api_service_list_runtime_results_serialize(
            cursor=cursor,
            limit=limit,
            filter=filter,
            sort=sort,
            order=order,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RuntimeResultsResponse",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '409': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def scanner_api_service_list_runtime_results_with_http_info(
        self,
        cursor: Annotated[Optional[Annotated[str, Field(strict=True, max_length=300)]], Field(description="Cursor is a string used to retrieve a particular page of data. It is an opaque structure, and should not be mangled. It could be retrieved in the body of each request. If a response does not contain a cursor, it means that it's the last page.")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="Limit for pagination")] = None,
        filter: Annotated[Optional[Annotated[str, Field(strict=True, max_length=1024)]], Field(description="Query language expression for filtering results. It is a subset of the full metrics query language used in monitoring.  Operators: - `and`, `or` logical operators (i.e. `kubernetes.cluster.name=\"production\" and kubernetes.pod.container.name = \"docker.internal.sysdig.tools\"`)  - `=` and `!=` comparison operators (i.e. `kubernetes.cluster.name=\"staging\"`)  This query language does not support the full set of metrics supported in the monitor query language, but instead supports a set of fields proper to each Scan Result type.  The supported fields are the all the fields of the `Scope`, plus: `freeText`, `hasRunningVulns` and `hasRunningVulns`.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Field used to sort the results vulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity runningVulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity for running assets")] = None,
        order: Annotated[Optional[StrictStr], Field(description="Ordering of the results for the sort field")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RuntimeResultsResponse]:
        """Get a list of runtime scan results

        Retrieves a list of runtime scan results discovered by the runtime scanner that match a filter given a specified cursor.

        :param cursor: Cursor is a string used to retrieve a particular page of data. It is an opaque structure, and should not be mangled. It could be retrieved in the body of each request. If a response does not contain a cursor, it means that it's the last page.
        :type cursor: str
        :param limit: Limit for pagination
        :type limit: int
        :param filter: Query language expression for filtering results. It is a subset of the full metrics query language used in monitoring.  Operators: - `and`, `or` logical operators (i.e. `kubernetes.cluster.name=\"production\" and kubernetes.pod.container.name = \"docker.internal.sysdig.tools\"`)  - `=` and `!=` comparison operators (i.e. `kubernetes.cluster.name=\"staging\"`)  This query language does not support the full set of metrics supported in the monitor query language, but instead supports a set of fields proper to each Scan Result type.  The supported fields are the all the fields of the `Scope`, plus: `freeText`, `hasRunningVulns` and `hasRunningVulns`.
        :type filter: str
        :param sort: Field used to sort the results vulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity runningVulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity for running assets
        :type sort: str
        :param order: Ordering of the results for the sort field
        :type order: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._scanner_api_service_list_runtime_results_serialize(
            cursor=cursor,
            limit=limit,
            filter=filter,
            sort=sort,
            order=order,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RuntimeResultsResponse",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '409': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def scanner_api_service_list_runtime_results_without_preload_content(
        self,
        cursor: Annotated[Optional[Annotated[str, Field(strict=True, max_length=300)]], Field(description="Cursor is a string used to retrieve a particular page of data. It is an opaque structure, and should not be mangled. It could be retrieved in the body of each request. If a response does not contain a cursor, it means that it's the last page.")] = None,
        limit: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="Limit for pagination")] = None,
        filter: Annotated[Optional[Annotated[str, Field(strict=True, max_length=1024)]], Field(description="Query language expression for filtering results. It is a subset of the full metrics query language used in monitoring.  Operators: - `and`, `or` logical operators (i.e. `kubernetes.cluster.name=\"production\" and kubernetes.pod.container.name = \"docker.internal.sysdig.tools\"`)  - `=` and `!=` comparison operators (i.e. `kubernetes.cluster.name=\"staging\"`)  This query language does not support the full set of metrics supported in the monitor query language, but instead supports a set of fields proper to each Scan Result type.  The supported fields are the all the fields of the `Scope`, plus: `freeText`, `hasRunningVulns` and `hasRunningVulns`.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Field used to sort the results vulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity runningVulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity for running assets")] = None,
        order: Annotated[Optional[StrictStr], Field(description="Ordering of the results for the sort field")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a list of runtime scan results

        Retrieves a list of runtime scan results discovered by the runtime scanner that match a filter given a specified cursor.

        :param cursor: Cursor is a string used to retrieve a particular page of data. It is an opaque structure, and should not be mangled. It could be retrieved in the body of each request. If a response does not contain a cursor, it means that it's the last page.
        :type cursor: str
        :param limit: Limit for pagination
        :type limit: int
        :param filter: Query language expression for filtering results. It is a subset of the full metrics query language used in monitoring.  Operators: - `and`, `or` logical operators (i.e. `kubernetes.cluster.name=\"production\" and kubernetes.pod.container.name = \"docker.internal.sysdig.tools\"`)  - `=` and `!=` comparison operators (i.e. `kubernetes.cluster.name=\"staging\"`)  This query language does not support the full set of metrics supported in the monitor query language, but instead supports a set of fields proper to each Scan Result type.  The supported fields are the all the fields of the `Scope`, plus: `freeText`, `hasRunningVulns` and `hasRunningVulns`.
        :type filter: str
        :param sort: Field used to sort the results vulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity runningVulnTotalBySeverity: sort by total number of running vulnerabilities weighted by severity for running assets
        :type sort: str
        :param order: Ordering of the results for the sort field
        :type order: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._scanner_api_service_list_runtime_results_serialize(
            cursor=cursor,
            limit=limit,
            filter=filter,
            sort=sort,
            order=order,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RuntimeResultsResponse",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '409': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _scanner_api_service_list_runtime_results_serialize(
        self,
        cursor,
        limit,
        filter,
        sort,
        order,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if cursor is not None:
            
            _query_params.append(('cursor', cursor))
            
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if filter is not None:
            
            _query_params.append(('filter', filter))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if order is not None:
            
            _query_params.append(('order', order))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/secure/vulnerability/v1/runtime-results',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


