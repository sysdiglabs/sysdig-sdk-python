# coding: utf-8

"""
    Sysdig Secure Client API

    Sysdig Secure Client API.

    The version of the OpenAPI document: 1.1.1
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sysdig_client.models.inhibition_rule_response_v1 import InhibitionRuleResponseV1

class TestInhibitionRuleResponseV1(unittest.TestCase):
    """InhibitionRuleResponseV1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InhibitionRuleResponseV1:
        """Test InhibitionRuleResponseV1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InhibitionRuleResponseV1`
        """
        model = InhibitionRuleResponseV1()
        if include_optional:
            return InhibitionRuleResponseV1(
                id = 1,
                version = 1,
                created_on = '2017-07-21T17:32:28Z',
                modified_on = '2017-07-21T17:32:28Z',
                customer_id = 12,
                team_id = 13,
                is_enabled = False,
                name = 'this is an example name',
                description = 'this is an example description',
                source_matchers = [
                    sysdig_client.models.label_matcher_v1.Label matcher v1(
                        label_name = 'myLabel', 
                        operator = 'EQUALS', 
                        value = 'regexExample[s]?', )
                    ],
                target_matchers = [
                    sysdig_client.models.label_matcher_v1.Label matcher v1(
                        label_name = 'myLabel', 
                        operator = 'EQUALS', 
                        value = 'regexExample[s]?', )
                    ],
                equal = [
                    'myLabel'
                    ]
            )
        else:
            return InhibitionRuleResponseV1(
        )
        """

    def testInhibitionRuleResponseV1(self):
        """Test InhibitionRuleResponseV1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
