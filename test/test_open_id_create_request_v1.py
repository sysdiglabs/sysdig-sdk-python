# coding: utf-8

"""
    Sysdig Secure Client API

    Sysdig Secure Client API.

    The version of the OpenAPI document: 1.1.1
    Contact: info@sysdig.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sysdig_client.models.open_id_create_request_v1 import OpenIdCreateRequestV1

class TestOpenIdCreateRequestV1(unittest.TestCase):
    """OpenIdCreateRequestV1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenIdCreateRequestV1:
        """Test OpenIdCreateRequestV1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenIdCreateRequestV1`
        """
        model = OpenIdCreateRequestV1()
        if include_optional:
            return OpenIdCreateRequestV1(
                issuer_url = 'https://accounts.example.com',
                client_id = 'client-id',
                is_metadata_discovery_enabled = True,
                metadata = sysdig_client.models.the_metadata_of_the_open_id_connect_provider.The metadata of the OpenID Connect provider(
                    issuer = 'https://accounts.example.com', 
                    authorization_endpoint = 'https://accounts.example.com/oauth2/authorize', 
                    token_endpoint = 'https://accounts.example.com/oauth2/token', 
                    jwks_uri = 'https://accounts.example.com/oauth2/jwks', 
                    end_session_endpoint = 'https://accounts.example.com/oauth2/logout', 
                    user_info_endpoint = 'https://accounts.example.com/oauth2/userinfo', 
                    token_auth_method = 'CLIENT_SECRET_BASIC', ),
                group_attribute_name = 'groups',
                is_additional_scopes_check_enabled = True,
                additional_scopes = [scope 1, scope 2],
                client_secret = 'client-secret'
            )
        else:
            return OpenIdCreateRequestV1(
                issuer_url = 'https://accounts.example.com',
                client_id = 'client-id',
                client_secret = 'client-secret',
        )
        """

    def testOpenIdCreateRequestV1(self):
        """Test OpenIdCreateRequestV1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
